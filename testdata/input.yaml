apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: http-only
    namespace: default
  spec:
    rules:
    - host: foo.bar.not-matched.com
      http:
        paths:
        - backend:
            serviceName: echo
            servicePort: 80
          path: /*
          pathType: ImplementationSpecific
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: ingress
    namespace: default
  spec:
    rules:
    - host: echo.example.com
      http:
        paths:
        - backend:
            serviceName: echo
            servicePort: 80
          path: /*
          pathType: ImplementationSpecific
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: ingress2
    namespace: default
  spec:
    rules:
    - host: httpbin.example.com
      http:
        paths:
        - backend:
            serviceName: httpbin
            servicePort: 80
          path: /*
          pathType: ImplementationSpecific
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: wildcard
    namespace: default
  spec:
    rules:
    - host: '*.example.com'
      http:
        paths:
        - backend:
            serviceName: echo
            servicePort: 80
          path: /*
          pathType: ImplementationSpecific
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: wildcard-to-explicit
    namespace: default
  spec:
    rules:
    - host: '*.other.com'
      http:
        paths:
        - backend:
            serviceName: echo
            servicePort: 80
          path: /*
          pathType: ImplementationSpecific
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: istio
    name: wildcard2
    namespace: default
  spec:
    rules:
    - host: '*.example.com'
      http:
        paths:
        - backend:
            serviceName: echo
            servicePort: 80
          path: /bar*
          pathType: ImplementationSpecific
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    name: istio-autogenerated-k8s-ingress
    namespace: gke-system
  spec:
    selector:
      istio: ingress-gke-system
    servers:
    - hosts:
      - '*'
      port:
        name: http
        number: 80
        protocol: HTTP2
    - hosts:
      - echo.example.com
      port:
        name: https-demo-wildcard1
        number: 443
        protocol: HTTPS
      tls:
        credentialName: echo-cred
        mode: SIMPLE
    - hosts:
      - mtls.example.com
      port:
        name: https-demo-wildcard2
        number: 443
        protocol: HTTPS
      tls:
        credentialName: mtls-cred
        mode: MUTUAL
    - hosts:
      - something.other.com
      port:
        name: https-demo-wildcard3
        number: 443
        protocol: HTTPS
      tls:
        credentialName: other-cred
        mode: SIMPLE
    - hosts:
      - '*.example.com'
      port:
        name: https-demo-wildcard4
        number: 443
        protocol: HTTPS
      tls:
        credentialName: star-example-cred
        mode: SIMPLE
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    name: istiod-gateway
    namespace: istio-system
  spec:
    selector:
      istio: eastwestgateway
    servers:
    - hosts:
      - '*'
      port:
        name: tls-istiod
        number: 15012
        protocol: tls
      tls:
        mode: PASSTHROUGH
    - hosts:
      - '*'
      port:
        name: tls-istiodwebhook
        number: 15017
        protocol: tls
      tls:
        mode: PASSTHROUGH
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""

